"use client"
import {useEffect, useState} from "react"

const IconNumber = ({number, color}) => {

  const [textColor, setTextColor] = useState("black")
  const [backgroundColor, setBackgroundColor] = useState("white")
  const [strokeColor, setStrokeColor] = useState("black")

  useEffect(() => {
    HandleColorTextInput()
  })

  const HandleColorTextInput = () => {
    if (color === "white") {
      setTextColor("black");
      setBackgroundColor("white");
      setStrokeColor("black")
    } else if (color === "green") {
      setTextColor("white");
      setBackgroundColor("#4ade80");
      setStrokeColor("#4ade80")
    } else if (color === "orange") {
      setTextColor("white");
      setBackgroundColor("#fbbf24")
      setStrokeColor("#fbbf24")
    }
  }

  return (
    <>
      {
        number === 1 && (
      <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
      <circle cx="20" cy="20" r="18.5" fill={color === "green" ? "#4ade80" : "white"} stroke={color === "green" ? "#4ade80" : "black"} stroke-width="3" className="transition-all"/>
      <path d="M22.5322 31H18.416V14.6377L13.0254 16.5713V13.0264L22.3125 9.67188H22.5322V31Z" fill={color === "green" ? "white" : "black"} className="transition-all"/>
      </svg>
        )
      }
      {
        number === 2 && (
          <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
          <circle cx="20" cy="20" r="18.5" fill={backgroundColor} stroke={strokeColor} stroke-width="3" className="transition-all"/>
          <path d="M26.0684 29H13.4619V26.5879L19.4414 20.1641C19.9069 19.6562 20.3005 19.195 20.6221 18.7803C20.9437 18.3656 21.2061 17.9847 21.4092 17.6377C21.6038 17.2992 21.7435 16.9818 21.8281 16.6855C21.9212 16.3893 21.9678 16.1016 21.9678 15.8223C21.9678 15.4076 21.9085 15.0394 21.79 14.7178C21.6715 14.3962 21.5065 14.1211 21.2949 13.8926C21.0749 13.6725 20.8125 13.5033 20.5078 13.3848C20.2116 13.2663 19.8815 13.207 19.5176 13.207C19.0436 13.207 18.6247 13.2747 18.2607 13.4102C17.9053 13.5371 17.609 13.7275 17.3721 13.9814C17.1266 14.2438 16.9404 14.5697 16.8135 14.959C16.6865 15.3483 16.623 15.7926 16.623 16.292H13.0811C13.0811 15.471 13.2376 14.6966 13.5508 13.9688C13.8639 13.2324 14.3083 12.5892 14.8838 12.0391C15.4508 11.4889 16.1364 11.0573 16.9404 10.7441C17.7529 10.4225 18.6501 10.2617 19.6318 10.2617C20.5713 10.2617 21.4007 10.3929 22.1201 10.6553C22.848 10.9176 23.4574 11.2858 23.9482 11.7598C24.4307 12.2337 24.7988 12.805 25.0527 13.4736C25.3066 14.1338 25.4336 14.8659 25.4336 15.6699C25.4336 16.2793 25.3363 16.8633 25.1416 17.4219C24.9554 17.972 24.6888 18.5179 24.3418 19.0596C23.9863 19.6012 23.5632 20.1556 23.0723 20.7227C22.5814 21.2812 22.0355 21.8695 21.4346 22.4873L17.9561 26.1689H26.0684V29Z" fill={textColor} className="transition-all"/>
          </svg>
        )
      }
      {
        number === 3 && (
          <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
          <circle cx="20" cy="20" r="18.5" fill={backgroundColor} stroke={strokeColor} stroke-width="3" className="transition-all"/>
          <path d="M17.5371 18.209H19.4541C19.9619 18.209 20.3978 18.1413 20.7617 18.0059C21.1341 17.862 21.4346 17.6631 21.6631 17.4092C21.8747 17.1891 22.0312 16.9225 22.1328 16.6094C22.2428 16.2878 22.2979 15.9408 22.2979 15.5684C22.2979 15.2044 22.2428 14.8743 22.1328 14.5781C22.0312 14.2734 21.8747 14.0111 21.6631 13.791C21.4515 13.5794 21.1807 13.4144 20.8506 13.2959C20.529 13.1774 20.1523 13.1182 19.7207 13.1182C19.3652 13.1182 19.0309 13.1689 18.7178 13.2705C18.4131 13.3721 18.1465 13.516 17.918 13.7021C17.681 13.8968 17.4948 14.1296 17.3594 14.4004C17.224 14.6712 17.1562 14.9759 17.1562 15.3145H13.627C13.627 14.5612 13.7793 13.8757 14.084 13.2578C14.3971 12.64 14.8245 12.1068 15.3662 11.6582C15.9079 11.2181 16.5426 10.8753 17.2705 10.6299C18.0068 10.3844 18.7982 10.2617 19.6445 10.2617C20.5586 10.2617 21.3965 10.376 22.1582 10.6045C22.9199 10.8245 23.5716 11.1546 24.1133 11.5947C24.6549 12.0433 25.0739 12.5977 25.3701 13.2578C25.6748 13.9095 25.8271 14.667 25.8271 15.5303C25.8271 15.9281 25.7679 16.3216 25.6494 16.7109C25.5309 17.0918 25.3574 17.4557 25.1289 17.8027C24.9004 18.1497 24.6169 18.4714 24.2783 18.7676C23.9398 19.0553 23.5505 19.305 23.1104 19.5166C23.6266 19.7028 24.071 19.9398 24.4434 20.2275C24.8242 20.5153 25.1374 20.8411 25.3828 21.2051C25.6283 21.5775 25.8102 21.9837 25.9287 22.4238C26.0472 22.8639 26.1064 23.3294 26.1064 23.8203C26.1064 24.6836 25.9414 25.4538 25.6113 26.1309C25.2812 26.8079 24.8285 27.375 24.2529 27.832C23.6774 28.2975 22.9919 28.653 22.1963 28.8984C21.4092 29.1354 20.5586 29.2539 19.6445 29.2539C18.8574 29.2539 18.0872 29.1481 17.334 28.9365C16.5892 28.7165 15.9248 28.3864 15.3408 27.9463C14.7568 27.5146 14.2871 26.9688 13.9316 26.3086C13.5846 25.6484 13.4111 24.8698 13.4111 23.9727H16.9404C16.9404 24.3281 17.0081 24.6582 17.1436 24.9629C17.279 25.2591 17.4736 25.513 17.7275 25.7246C17.973 25.9447 18.265 26.1182 18.6035 26.2451C18.9421 26.3636 19.3145 26.4229 19.7207 26.4229C20.1777 26.4229 20.5882 26.3594 20.9521 26.2324C21.3161 26.1055 21.6208 25.9193 21.8662 25.6738C22.1032 25.4538 22.2809 25.1829 22.3994 24.8613C22.5264 24.5397 22.5898 24.18 22.5898 23.7822C22.5898 23.2829 22.5179 22.8555 22.374 22.5C22.2301 22.1445 22.0228 21.8525 21.752 21.624C21.4727 21.3955 21.1383 21.2262 20.749 21.1162C20.3682 21.0062 19.9365 20.9512 19.4541 20.9512H17.5371V18.209Z" fill={textColor} className="transition-all"/>
          </svg>
        )
      }
      {
        number === 4 && (
          <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
          <circle cx="20" cy="20" r="18.5" fill={backgroundColor} stroke={strokeColor} stroke-width="3" className="transition-all"/>
          <path d="M24.291 22.1318H26.4365V24.9883H24.291V29H20.7617V24.9883H13.0811L12.9414 22.7793L20.7109 10.5156H24.291V22.1318ZM16.4072 22.1318H20.7617V15.2637L20.4189 15.873L16.4072 22.1318Z" fill={textColor} className="transition-all"/>
          </svg>
        )
      }
    </>
  )
}

export default IconNumber;
